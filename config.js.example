// You can here register the connection to the database, change host and port
// ID of database must be unique
var FileStore = require('connect-session-file');

var listen = {
    host: '127.0.0.1',
    port: 8888
};

var session_config = {
    secret: "keyboard cat",
    store: new FileStore({
        path:    "./session", //storage path
        prefix:    'file-store-', //filename prefix
        useAsync:    false, //use asynchronous file operations
        printDebug:    false, //prints debug output
        reapInterval:    -1, //interval between removing stale sessions (optional, default: 600000 (10 mins), disable: -1 )
        maxAge:    600000*3 //maximum age of sessions before removal (30 mins)
    })
};

var db = {
    db_id : {
        type: 'postgres',
        host : 'localhost',
        user :  'postgres',
        password : '12345678',
        database : 'postgres',
    },

    db_id1 : {
        type: 'postgres',
        host : 'localhost',
        user :  'postgres',
        password : '12345678',
        database : 'test2',
    },

    db_id3: {
        type: 'mysql',
        host : 'localhost',
        user :  'root',
        password : '12345678',
        database : 'node',
        table_groups : './tableGroups/project1.txt' // optional parameter
    },

    db_id4 : {
        type: 'mysql',
        host : 'localhost',
        user :  'root',
        password : '12345678',
        database : 'test1',
    }
};

exports.authenticate = function (user, pass) { //if you don't waunt to use authentication do not use this function
    if (user == 'browse' && pass == 'db') { //it's possible to use other criteria to validate a login and a password
        return true;
    }

    return false;
}

var addons = {};
addons.fun = {}; // empty configuration for the fun add-on

exports.addons = addons;
exports.db = db;
exports.listen = listen;
exports.session_config = session_config;